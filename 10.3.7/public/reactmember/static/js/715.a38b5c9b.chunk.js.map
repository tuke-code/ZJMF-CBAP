{"version":3,"file":"static/js/715.a38b5c9b.chunk.js","mappings":"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","sources":["api/network.js","components/comPagination/ComPagination.jsx","components/delDialog/DelDialog.jsx","views/product/network/securityGroup/SecurityGroup.jsx"],"sourcesContent":["/* 产品-网络模块 */\r\nimport request from \"../utils/request\";\r\n/* vpc */\r\nexport function getVpc (params) {\r\n  return request.get(`/vpc`, { params });\r\n}\r\nexport function addVpc (params) {\r\n  return request.post(`/vpc`, params);\r\n}\r\nexport function updateVpc (params) {\r\n  return request.put(`/vpc/${params.id}`, params);\r\n}\r\nexport function deleteVpc (id) {\r\n  return request.delete(`/vpc/${id}`);\r\n}\r\n\r\n/* 安全组 */\r\nexport function getGroup (params) {\r\n  return request.get(`/security_group`, { params });\r\n}\r\nexport function getGroupDetail (id) {\r\n  return request.get(`/security_group/${id}`);\r\n}\r\nexport function addAndUpdateGroup (type, params) {\r\n  if (type === 'add') {\r\n    return request.post(`/security_group`, params);\r\n  } else if (type === 'update') {\r\n    return request.put(`/security_group/${params.id}`, params);\r\n  }\r\n}\r\nexport function deleteGroup (id) {\r\n  return request.delete(`/security_group/${id}`);\r\n}\r\n\r\n/* 安全组规则 */\r\nexport function getGroupRules (params) {\r\n  return request.get(`/security_group/${params.id}/rule`, { params });\r\n}\r\nexport function addAndUpdateGroupRules (type, params) {\r\n  if (type === 'add') {\r\n    return request.post(`/security_group/${params.id}/rule`, params);\r\n  } else if (type === 'update') {\r\n    return request.put(`/security_group/rule/${params.id}`, params);\r\n  }\r\n}\r\nexport function deleteGroupRules (id) {\r\n  return request.delete(`/security_group/rule/${id}`);\r\n}\r\n// 批量添加安全组规则\r\nexport function batchRules (params) {\r\n  return request.post(`/security_group/${params.id}/rule/batch`, params);\r\n}\r\n\r\n// 安全组实例列表\r\nexport function getGroupCloud (params) {\r\n  return request.get(`/security_group/${params.id}/host`, {params});\r\n}\r\n// 关联安全组\r\nexport function concatCloud (params) {\r\n  return request.post(`/security_group/${params.id}/host/${params.host_id}`,params);\r\n}\r\n// 取消关联实例\r\nexport function cancelConcatCloud (params) {\r\n  return request.delete(`/security_group/${params.id}/host/${params.host_id}`);\r\n}\r\n// 获取所有可用实例\r\nexport function getAllCloud () {\r\n  return request.get(`/idcsmart_cloud/all`);\r\n}","import React from \"react\";\r\nimport { Pagination } from \"antd\";\r\nimport \"./ComPagination.css\";\r\nexport default function ComPagination(props) {\r\n  const changePage = (page, limit) => {\r\n    props.changePage(page, limit);\r\n  };\r\n  const { page } = props;\r\n  return (\r\n    <Pagination\r\n      total={props.total}\r\n      pageSize={page.limit}\r\n      showSizeChanger\r\n      pageSizeOptions={props.pageSizeOptions || [10, 20, 30, 50, 100]}\r\n      current={page.page}\r\n      showTitle={false}\r\n      onChange={changePage}\r\n      showTotal={(total, range) => `显示${range[0]}-${range[1]} 的 ${total}`}\r\n    />\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Swal from \"sweetalert2\";\r\nimport './DelDialog.css'\r\nexport default function DelDialog (props) {\r\n  const { t } = useTranslation()\r\n  const handleOk = () => {\r\n    props.closeDialog()\r\n    props.submitDel()\r\n  }\r\n  const handleCancel = () => {\r\n    props.closeDialog()\r\n  }\r\n  const showDialog = () => {\r\n    Swal.fire({\r\n      title: props.title ? props.title : t('common.delete'),\r\n      text: props.text ? props.text : t('common.tip') + '？',\r\n      customClass: {\r\n        title: 'del-tit',\r\n        icon: props.icon ? \"warning-icon\" : \"del-icon\",\r\n        text: 'del-text'\r\n      },\r\n      icon: props.icon || \"info\",\r\n      showCancelButton: true,\r\n      confirmButtonText: t(\"common.sure\"),\r\n      cancelButtonText: t(\"common.cancel\"),\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        handleOk()\r\n      } else if (result.isDismissed) {\r\n        handleCancel()\r\n      }\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    showDialog()\r\n  }, [props])\r\n  return null\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport { message, Input, Table, Popover, Modal, Form, Button } from 'antd';\r\nimport './group.css'\r\nimport * as network from '@/api/network'\r\nimport { showDialog } from '@/utils/util'\r\nimport DelDialog from '@/components/delDialog/DelDialog';\r\nimport {\r\n  EllipsisOutlined\r\n} from '@ant-design/icons';\r\nimport ComPagination from '@/components/comPagination/ComPagination.jsx'\r\n\r\nconst { TextArea } = Input;\r\nexport default function SecurityGroup () {\r\n  const [form] = Form.useForm()\r\n  const { t } = useTranslation()\r\n  const navigate = useNavigate()\r\n  const [total, setTotal] = useState(0)\r\n  const [params, setParams] = useState({\r\n    keywords: '',\r\n    page: 1,\r\n    limit: 20,\r\n    orderby: 'id',\r\n    sort: 'desc'\r\n  })\r\n  const [info, setInfo] = useState({})\r\n  const [title, setTitle] = useState(t('cloud.bas_btn2') + t('cloud.security_group'))\r\n  const [loading, setLoading] = useState(false)\r\n  const [btnLoading, setBtnLoading] = useState(false)\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n  const [itemModal, setItemModal] = useState(false)\r\n  const [optType, setOptType] = useState('add')\r\n  const [list, setList] = useState([])\r\n  const columns = [\r\n    {\r\n      title: t('cloud.bas_columns_title1'),\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      ellipsis: true,\r\n      width: 250,\r\n      render: (_, record) => (\r\n        <>\r\n          <span onClick={() => jump(record)} className='link'>{record.name}</span>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      title: t(\"menu.cloud\"),\r\n      dataIndex: 'host_num',\r\n      key: 'host_num',\r\n      ellipsis: true,\r\n      width: 100\r\n    },\r\n    {\r\n      title: t(\"network.rules\"),\r\n      dataIndex: 'rule_num',\r\n      key: 'rule_num',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: t(\"common.create_time\"),\r\n      dataIndex: 'create_time',\r\n      key: 'num',\r\n      ellipsis: true,\r\n      width: 200,\r\n      render: (create_time) => (\r\n        <>\r\n          {moment(create_time * 1000).format(\"YYYY-MM-DD HH:mm\")}\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      title: t(\"common.manage\"),\r\n      dataIndex: 'manage',\r\n      key: 'manage',\r\n      width: 100,\r\n      render: (_, record) => (\r\n        <>\r\n          <div className=\"com-opt-pop\" id={'com-opt' + record.id}>\r\n            <Popover getPopupContainer={() => document.getElementById('com-opt' + record.id)}\r\n              content={\r\n                <>\r\n                  <p className=\"cloud-opt\" onClick={() => editItem(record)}>{t(\"common.edit\")}</p>\r\n                  <p className=\"cloud-opt\" onClick={() => deleteItem(record)}>{t(\"common.delete\")}</p>\r\n                </>\r\n              } placement=\"topRight\">\r\n              <p className=\"opt-icon\"><EllipsisOutlined /></p>\r\n            </Popover>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n  ]\r\n  // 跳转\r\n  const jump = (record) => {\r\n    navigate(`/group_rules?id=${record.id}`)\r\n  }\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const res = await network.getGroup(params)\r\n      setList(res.data.data.list)\r\n      setTotal(res.data.data.count)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      showDialog(error.data.msg, 'error')\r\n      setLoading(false)\r\n    }\r\n  }\r\n  const deleteItem = (e) => {\r\n    setInfo(e)\r\n    setIsModalVisible(true)\r\n  }\r\n  const closeDialog = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n  // 执行删除操作\r\n  const submitDel = async () => {\r\n    try {\r\n      const res = await network.deleteGroup(info.id)\r\n      if (res.data.status === 200) {\r\n        showDialog(res.data.msg, 'success')\r\n        getData()\r\n      }\r\n    } catch (error) {\r\n      message.error(error.data.msg)\r\n    }\r\n  }\r\n  const createItem = () => {\r\n    setOptType('add')\r\n    setTitle(t('cloud.bas_btn2') + t('cloud.security_group'))\r\n    setItemModal(true)\r\n  }\r\n  // 编辑\r\n  const editItem = (row) => {\r\n    setTitle(t('common.edit') + t('cloud.security_group'))\r\n    setOptType('update')\r\n    setItemModal(true)\r\n    setInfo(row)\r\n    form.setFieldsValue({\r\n      name: row.name,\r\n      description: row.description\r\n    })\r\n  }\r\n  const handleCancel = () => {\r\n    setItemModal(false)\r\n    form.resetFields()\r\n  }\r\n  const onFinish = async (values) => {\r\n    try {\r\n      setBtnLoading(true)\r\n      const { name, description } = values\r\n      const params = {\r\n        id: info.id,\r\n        name,\r\n        description\r\n      }\r\n      if (optType === 'add') {\r\n        delete params.id\r\n      }\r\n      const res = await network.addAndUpdateGroup(optType, params)\r\n      showDialog(res.data.msg, 'success')\r\n      getData()\r\n      setBtnLoading(false)\r\n      handleCancel()\r\n    } catch (error) {\r\n      setBtnLoading(false)\r\n      showDialog(error.data.msg, 'error')\r\n    }\r\n  };\r\n  const changePage = (page, size) => {\r\n    setParams(params => {\r\n      params.limit = size\r\n      params.page = page\r\n      return params\r\n    })\r\n    getData()\r\n  }\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <div className='security_group'>\r\n      <div className='top'>\r\n        <span className='tip'></span>\r\n        <div className='com-add-btn' onClick={createItem}>\r\n          {t('cloud.bas_btn2')}{t('cloud.security_group')}\r\n        </div>\r\n      </div>\r\n      <Table columns={columns} dataSource={list} loading={loading}\r\n        rowKey={record => record.id} pagination={false} className='cloud-tab' />\r\n      <ComPagination total={total} page={params} changePage={changePage} ></ComPagination>\r\n      {/* 新增,编辑 */}\r\n      <Modal title={title} visible={itemModal} onCancel={handleCancel}\r\n        className='com-modal'\r\n        closable={false}\r\n        footer={false}>\r\n        <Form name='basic'\r\n          form={form}\r\n          labelCol={{\r\n            span: 3,\r\n          }}\r\n          labelAlign='left'\r\n          onFinish={onFinish}\r\n          autoComplete='off'\r\n          colon={false}\r\n        >\r\n          <Form.Item\r\n            label={t('cloud.bas_columns_title1')}\r\n            name='name'\r\n            rules={[{\r\n              required: true,\r\n              message: t('input') + t('cloud.bas_columns_title1'),\r\n            },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={t('common.description')}\r\n            name=\"description\">\r\n            <TextArea rows={4} />\r\n          </Form.Item>\r\n          <Form.Item className='f-btn'>\r\n            <Button className='submit' htmlType=\"submit\" loading={btnLoading}>{t('common.sure')}</Button>\r\n            <Button className='cancel' onClick={handleCancel}>{t('common.cancel')}</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      {/* 通用删除 */}\r\n      {\r\n        isModalVisible && <DelDialog\r\n          closeDialog={closeDialog} submitDel={submitDel}\r\n          text={t('common.tip') + info.name + '？'}\r\n        ></DelDialog>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n"],"names":["getVpc","params","request","addVpc","updateVpc","id","deleteVpc","getGroup","addAndUpdateGroup","type","deleteGroup","getGroupRules","addAndUpdateGroupRules","deleteGroupRules","batchRules","getGroupCloud","concatCloud","host_id","cancelConcatCloud","getAllCloud","ComPagination","props","page","total","pageSize","limit","showSizeChanger","pageSizeOptions","current","showTitle","onChange","changePage","showTotal","range","DelDialog","t","useTranslation","showDialog","Swal","title","text","customClass","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","closeDialog","submitDel","isDismissed","useEffect","TextArea","Input","SecurityGroup","Form","form","navigate","useNavigate","useState","setTotal","keywords","orderby","sort","setParams","info","setInfo","setTitle","loading","setLoading","btnLoading","setBtnLoading","isModalVisible","setIsModalVisible","itemModal","setItemModal","optType","setOptType","list","setList","columns","dataIndex","key","ellipsis","width","render","_","record","onClick","jump","className","name","create_time","moment","format","getPopupContainer","document","getElementById","content","editItem","deleteItem","placement","EllipsisOutlined","getData","network","res","data","count","msg","e","status","message","row","setFieldsValue","description","handleCancel","resetFields","onFinish","values","dataSource","rowKey","pagination","size","visible","onCancel","closable","footer","labelCol","span","labelAlign","autoComplete","colon","label","rules","required","rows","htmlType"],"sourceRoot":""}