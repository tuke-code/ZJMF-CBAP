{"version":3,"file":"static/js/875.e263399d.chunk.js","mappings":"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","sources":["api/support.js","components/comPagination/ComPagination.jsx","views/support/AddWork.jsx","../node_modules/rc-util/es/getScrollBarSize.js"],"sourcesContent":["import request from \"../utils/request\";\r\n//获取工单列表\r\nexport function geTickList(param) {\r\n  return request.get(`/ticket`, { params: { ...param } });\r\n}\r\n//获取工单类型\r\nexport function geTickType() {\r\n  return request.get(`/ticket/type `);\r\n}\r\n//获取产品列表\r\nexport function getHostList(param) {\r\n  return request.get(`/host`, { params: { ...param } });\r\n}\r\n//创建工单\r\nexport function createOrder(param) {\r\n  return request.post(\"/ticket\", param);\r\n}\r\n//工单统计\r\nexport function ticketNums() {\r\n  return request.get(\"/ticket/statistic\");\r\n}\r\n//催单\r\nexport function onUrge(id) {\r\n  return request.put(\"/ticket/\" + id + \"/urge\");\r\n}\r\n//关闭\r\nexport function onClose(data) {\r\n  return request.put(\"/ticket/\" + data.id + \"/close\");\r\n}\r\n//工单信息\r\nexport function getTickInfo(id) {\r\n  return request.get(\"ticket/\" + id);\r\n}\r\n//回复工单\r\nexport function replyMssage(id, param) {\r\n  return request.post(\"ticket/\" + id + \"/reply \", param);\r\n}\r\n//帮助文档列表\r\nexport function gethelplist(param) {\r\n  return request.get(\"/help\", { params: { ...param } });\r\n}\r\n\r\n//帮助中心首页\r\nexport function gethelpindex(param) {\r\n  return request.get(\"/help/index\", { params: { ...param } });\r\n}\r\n//帮助文档详情\r\nexport function gethelpdetial(param) {\r\n  return request.get(\"/help/\" + param.id, { params: { ...param } });\r\n}\r\n//获取新闻分类\r\nexport function noticetype(param) {\r\n  return request.get(\"/news/type\", { params: { ...param } });\r\n}\r\n//新闻列表\r\nexport function getnoticeList(param) {\r\n  return request.get(\"/news\", { params: { ...param } });\r\n}\r\n//新闻详情\r\nexport function getnoticedetial(param) {\r\n  return request.get(\"/news/\" + param.id, { params: { ...param } });\r\n}\r\n//获取文件夹\r\nexport function folderList(param) {\r\n  return request.get(\"/file/folder\", { params: { ...param } });\r\n}\r\n//文件列表\r\nexport function fileList(param) {\r\n  return request.get(\"/file\", { params: { ...param } });\r\n}\r\n//下载文件\r\nexport function downloadfile(param) {\r\n  return request.get(\"/file/\" + param.id + \"/download\", {\r\n    params: { ...param },\r\n    responseType: \"blob\",\r\n  });\r\n}\r\n\r\n//获取上传文件数据\r\nexport function getDownload(param) {\r\n  return request.post(\"ticket/download\", param, {\r\n    responseType: \"blob\",\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { Pagination } from \"antd\";\r\nimport \"./ComPagination.css\";\r\nexport default function ComPagination(props) {\r\n  const changePage = (page, limit) => {\r\n    props.changePage(page, limit);\r\n  };\r\n  const { page } = props;\r\n  return (\r\n    <Pagination\r\n      total={props.total}\r\n      pageSize={page.limit}\r\n      showSizeChanger\r\n      pageSizeOptions={props.pageSizeOptions || [10, 20, 30, 50, 100]}\r\n      current={page.page}\r\n      showTitle={false}\r\n      onChange={changePage}\r\n      showTotal={(total, range) => `显示${range[0]}-${range[1]} 的 ${total}`}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport \"./support.less\"\r\nimport { Card, Col, Input, Row, Select, Table, message, Upload, Button, Image, Popover, Divider, Tooltip } from 'antd'\r\nimport ComPagination from '@/components/comPagination/ComPagination.jsx'\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\nimport { SearchOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport baseUrl from \"../../utils/base\";\r\nimport {\r\n    geTickList,\r\n    geTickType,\r\n    getHostList,\r\n    createOrder,\r\n    ticketNums,\r\n    onUrge,\r\n    onClose,\r\n    getTickInfo,\r\n    replyMssage\r\n} from \"../../api/support\";\r\nimport { getUserId, upoadFile } from \"../../api/common\";\r\nimport moment from \"moment\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport axios from \"axios\";\r\nconst { Column } = Table;\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nexport default function AddWork() {\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate()\r\n    const [orderTypeList, setorderTypeList] = useState([])\r\n    const [addOrderParams, setaddOrderParams] = useState({\r\n        title: \"\",\r\n        content: \"\",\r\n    });\r\n    //上传文件列表\r\n    const [files, setFiles] = useState([])\r\n    let props = {\r\n        accept: '*',\r\n        action: baseUrl + '/upload',\r\n        name: 'file',\r\n        headers: {},\r\n        showUploadList: false,\r\n        multiple: true,\r\n        // 删除\r\n        onRemove: (file) => {\r\n\r\n\r\n        },\r\n        //文件上传之前的操作\r\n        beforeUpload: (file) => {\r\n            // 设置上传文件大小小于50M\r\n            const isLt10M = file.size / 1024 / 1024 <= 256;\r\n            if (!file.length) {\r\n                if (!isLt10M) {\r\n                    message.error(t(\"tip.tip6\"));\r\n                    clearHtml()\r\n                    return false;\r\n                } else {\r\n\r\n                }\r\n            } else {\r\n\r\n                return false;\r\n            }\r\n            let flag = false;\r\n            files.forEach(res => {\r\n                if (res.fullName.split('^')[1] == file.name) {\r\n                    flag = true\r\n                }\r\n            })\r\n            if (flag) {\r\n                message.error(t(\"tip.tip5\"));\r\n                clearHtml()\r\n                return false\r\n            }\r\n\r\n        },\r\n        onfinish: (res) => {\r\n            console.log(res)\r\n        },\r\n        onChange: (res) => {\r\n            let judge = true;\r\n            for (let i in res.fileList) {\r\n                if (res.fileList[i].percent == 100 && res.event) {\r\n                } else {\r\n                    judge = false\r\n                }\r\n            }\r\n            if (judge) {\r\n                setTimeout(() => {\r\n                    clearHtml()\r\n                }, 1000)\r\n\r\n            }\r\n            if (res.file.status == 'uploading') {\r\n                return\r\n            }\r\n\r\n            if (res.file.status == 'done') {\r\n                if (res.file.response.data == null) {\r\n                    message.error(res.file.response.msg)\r\n                    return\r\n                }\r\n                const data = res.file.response.data;\r\n                let fileSign = 'img';\r\n                let fileName = res.file.response.data.save_name\r\n                if (data.image_base64 == null) {\r\n                    const fileType = data.save_name.split('.');\r\n                    const filenames = data.save_name.split('^');\r\n                    fileName = filenames[1]\r\n                    if (fileType[fileType.length - 1] == 'xlsx' || fileType[fileType.length - 1] == 'xls') {\r\n                        fileSign = 'xls'\r\n                    } else if (fileType[fileType.length - 1] == 'doc' || fileType[fileType.length - 1] == 'docx') {\r\n                        fileSign = 'doc'\r\n                    } else if (fileType[fileType.length - 1] == 'pdf') {\r\n                        fileSign = 'pdf'\r\n                    } else if (fileType[fileType.length - 1] == 'txt') {\r\n                        fileSign = 'txt'\r\n                    } else if (fileType[fileType.length - 1] == 'rar' || fileType[fileType.length - 1] == 'zip') {\r\n                        fileSign = 'rar'\r\n                    }\r\n                }\r\n                let flg = false;\r\n                files.forEach((item) => {\r\n                    if (item.name == fileName) {\r\n                        flg = true;\r\n                    }\r\n                })\r\n                if (flg) {\r\n                    message.error(t(\"tip.tip5\"))\r\n                    return\r\n                }\r\n                const newData = {\r\n                    name: fileName,\r\n                    fullName: res.file.response.data.save_name,\r\n                    url: res.file.response.data.image_base64,\r\n                    fileSignName: fileSign\r\n                }\r\n                setFiles(() => {\r\n                    return [...files, newData]\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n    };\r\n    const [productList, setproductList] = useState([])\r\n    const [productIds, setproductIds] = useState([])\r\n    const [typeSelect, setTypeSelect] = useState(-1)\r\n    const clearHtml = () => {\r\n        setTimeout(function () {\r\n            const doms = document.getElementsByClassName(\"ant-upload-list\");\r\n            for (let i = 0; i < doms.length; i++) {\r\n                doms[i].innerHTML = ''\r\n            }\r\n        }, 1000)\r\n    }\r\n    useEffect(() => {\r\n        onGetTickType();\r\n        // onGetUserId();\r\n        onGetHostList();\r\n\r\n    }, []);\r\n\r\n    const onGetTickType = () => {\r\n        geTickType().then(res => {\r\n            if (res.data.status == 200) {\r\n                const list = res.data.data.list;\r\n                setorderTypeList([...list])\r\n                console.log(orderTypeList)\r\n            }\r\n\r\n        })\r\n    }\r\n    const onGetHostList = () => {\r\n        getHostList().then(res => {\r\n            setproductList([...res.data.data.list])\r\n            console.log(res.data.data.list)\r\n        })\r\n    }\r\n    const handleSelectChange = (e) => {\r\n        console.log(\"select\", e)\r\n        setproductIds([...e])\r\n    }\r\n    //删除文件\r\n    const removeFile = (name) => {\r\n        setFiles(prev => prev.filter((el) => el.name !== name));\r\n    }\r\n    //取消\r\n    const onCancle = () => {\r\n        navigate(-1)\r\n\r\n    }\r\n    //创建工单提交\r\n    const onCreate = () => {\r\n        if (addOrderParams.title == '') {\r\n            message.error(t(\"tip.messagetip1\"))\r\n            return\r\n        }\r\n        if (typeSelect == -1) {\r\n            message.error(t(\"tip.messagetip2\"))\r\n            return\r\n        }\r\n        const list = [];\r\n        files.map(res => {\r\n            list.push(res.fullName);\r\n        })\r\n        createOrder({\r\n            title: addOrderParams.title,\r\n            ticket_type_id: orderTypeList[typeSelect].id,\r\n            host_ids: productIds,\r\n            content: addOrderParams.content,\r\n            attachment: list\r\n\r\n        }).then(res => {\r\n            if (res.data.status == 200) {\r\n                message.success(res.data.msg)\r\n                navigate(-1)\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className='support-content'>\r\n            <div className='order-add'>\r\n                <Row gutter={30}>\r\n                    <Col lg={15} md={24}>\r\n                        <div className='card'>\r\n                            <div className='title'>{t(\"support.addWork\")}</div>\r\n\r\n                            <div className='order-types'>\r\n\r\n                                <div className='name'>\r\n                                    {t(\"support.workType\")}\r\n                                </div>\r\n\r\n                                <div className=\"types-menu\">\r\n\r\n\r\n                                    {\r\n                                        orderTypeList.map((item, index) => {\r\n                                            return <div\r\n                                                className={['type-card ', typeSelect == index ? 'type-card-active' : ''].join('')}\r\n                                                key={index} onClick={() => setTypeSelect(index)}>\r\n                                                {\r\n                                                    typeSelect == index ? <img\r\n                                                        src={require(\"@/assets/images/support/type-select.png\")} /> :\r\n                                                        <img\r\n                                                            src={require(\"@/assets/images/support/type-unselect.png\")} />\r\n                                                }\r\n                                                <div className='text' title={item.name}>{item.name}</div>\r\n                                            </div>\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className='model'>\r\n                                <div className='name'>\r\n                                    {t(\"support.workTitle\")}\r\n                                </div>\r\n                                <Input maxLength={150} defaultValue={addOrderParams.title} onChange={(e) => {\r\n                                    addOrderParams.title = e.target.value\r\n\r\n                                }} />\r\n                            </div>\r\n                            <div className='tip'> {t(\"support.workTitleTip\")}</div>\r\n                            <div className='model'>\r\n                                <div className='name'>\r\n                                    {t(\"support.relatedProducts\")}\r\n                                </div>\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    showArrow={true}\r\n                                    onChange={handleSelectChange}\r\n                                    filterOption={(input, option) => option.children[0].toLowerCase().includes(input.toLowerCase())}\r\n                                    getPopupContainer={triggerNode => triggerNode.parentElement}\r\n                                >\r\n                                    {\r\n                                        productList.map((item, index) => {\r\n                                            return <Option key={item.id}\r\n                                                value={item.id}>{item.product_name}({item.name})</Option>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </div>\r\n                            <div className='model models'>\r\n                                <div className='name'>\r\n                                    {t(\"support.description\")}\r\n                                </div>\r\n                                <TextArea style={{ width: '100%', resize: 'none', height: '136px' }}\r\n                                    rows={5}\r\n                                    defaultValue={addOrderParams.content}\r\n                                    onChange={(e) => addOrderParams.content = e.target.value} />\r\n                            </div>\r\n                            <div className='tip'> {t(\"support.descriptionTip\")}</div>\r\n                            <div className='model'>\r\n                                <div className='name'>\r\n                                    {t(\"support.attachment\")}\r\n                                </div>\r\n                                <div className='file-list'>\r\n                                    <div>\r\n                                        <Upload  {...props} showUploadList={{ showPreviewIcon: false }}>\r\n                                            <Button className='upload-btn'>\r\n                                                <img src={require(\"@/assets/images/support/upload-icon.png\")} />  {t(\"support.attachment\")}\r\n                                            </Button>\r\n                                        </Upload>\r\n                                    </div>\r\n                                    {\r\n                                        files.map((item, index) => {\r\n                                            if (item.fileSignName === 'img') {\r\n                                                return <div className='img-item' key={index}><img\r\n                                                    width={72}\r\n                                                    height={48}\r\n                                                    src={item.url} />\r\n                                                    <div className='item-del'\r\n                                                        onClick={() => removeFile(item.name)}>X\r\n                                                    </div>\r\n                                                </div>\r\n                                            } else {\r\n                                                if (item.fileSignName === 'doc') {\r\n                                                    return <div className='other-item' key={index}><img\r\n                                                        src={require(\"@/assets/images/support/w.png\")} />\r\n                                                        <div className='text'>{item.name}</div>\r\n                                                        <div className='item-del'\r\n                                                            onClick={() => removeFile(item.name)}>X\r\n                                                        </div>\r\n                                                    </div>\r\n                                                } else if (item.fileSignName === 'txt') {\r\n                                                    return <div className='other-item' key={index}><img\r\n                                                        src={require(\"@/assets/images/support/txt.png\")} />\r\n                                                        <div className='text'>{item.name}</div>\r\n                                                        <div className='item-del'\r\n                                                            onClick={() => removeFile(item.name)}>X\r\n                                                        </div>\r\n                                                    </div>\r\n                                                } else if (item.fileSignName === 'pdf') {\r\n                                                    return <div className='other-item' key={index}><img\r\n                                                        src={require(\"@/assets/images/support/p.png\")} />\r\n                                                        <div className='text'>{item.name}</div>\r\n                                                        <div className='item-del'\r\n                                                            onClick={() => removeFile(item.name)}>X\r\n                                                        </div>\r\n                                                    </div>\r\n                                                } else if (item.fileSignName === 'rar') {\r\n                                                    return <div className='other-item' key={index}><img\r\n                                                        src={require(\"@/assets/images/support/RAR.png\")} />\r\n                                                        <div className='text'>{item.name}</div>\r\n                                                        <div className='item-del'\r\n                                                            onClick={() => removeFile(item.name)}>X\r\n                                                        </div>\r\n                                                    </div>\r\n                                                } else if (item.fileSignName === 'xls') {\r\n                                                    return <div className='other-item' key={index}><img\r\n                                                        src={require(\"@/assets/images/support/xlsx.png\")} />\r\n                                                        <div className='text'>{item.name}</div>\r\n                                                        <div className='item-del'\r\n                                                            onClick={() => removeFile(item.name)}>X\r\n                                                        </div>\r\n                                                    </div>\r\n                                                }\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className='btns'>\r\n                                <div className='btn-cancle' onClick={() => onCancle()}>{t(\"cancel\")}</div>\r\n                                <div className='btn-sure' onClick={() => onCreate()}>{t(\"submit\")}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={9} md={24}>\r\n                        <div className='card'>\r\n                            <div className='type-list'>\r\n                                <div style={{ width: '100%' }}>\r\n                                    {\r\n                                        orderTypeList.map((item, index) => {\r\n                                            return <div\r\n                                                className={['type-item ', typeSelect == index ? 'item-active' : ''].join('')}\r\n                                                key={index} onClick={() => setTypeSelect(index)}>\r\n                                                <div className='name'>{item.name}</div>\r\n                                                <div className='content'>{item.description}\r\n                                                </div>\r\n                                            </div>\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <div className='line'></div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-param-reassign */\nvar cached;\nexport default function getScrollBarSize(fresh) {\n  if (typeof document === 'undefined') {\n    return 0;\n  }\n\n  if (fresh || cached === undefined) {\n    var inner = document.createElement('div');\n    inner.style.width = '100%';\n    inner.style.height = '200px';\n    var outer = document.createElement('div');\n    var outerStyle = outer.style;\n    outerStyle.position = 'absolute';\n    outerStyle.top = '0';\n    outerStyle.left = '0';\n    outerStyle.pointerEvents = 'none';\n    outerStyle.visibility = 'hidden';\n    outerStyle.width = '200px';\n    outerStyle.height = '150px';\n    outerStyle.overflow = 'hidden';\n    outer.appendChild(inner);\n    document.body.appendChild(outer);\n    var widthContained = inner.offsetWidth;\n    outer.style.overflow = 'scroll';\n    var widthScroll = inner.offsetWidth;\n\n    if (widthContained === widthScroll) {\n      widthScroll = outer.clientWidth;\n    }\n\n    document.body.removeChild(outer);\n    cached = widthContained - widthScroll;\n  }\n\n  return cached;\n}\n\nfunction ensureSize(str) {\n  var match = str.match(/^(.*)px$/);\n  var value = Number(match === null || match === void 0 ? void 0 : match[1]);\n  return Number.isNaN(value) ? getScrollBarSize() : value;\n}\n\nexport function getTargetScrollBarSize(target) {\n  if (typeof document === 'undefined' || !target || !(target instanceof Element)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var _getComputedStyle = getComputedStyle(target, '::-webkit-scrollbar'),\n      width = _getComputedStyle.width,\n      height = _getComputedStyle.height;\n\n  return {\n    width: ensureSize(width),\n    height: ensureSize(height)\n  };\n}"],"names":["geTickList","param","request","params","geTickType","getHostList","createOrder","ticketNums","onUrge","id","onClose","data","getTickInfo","replyMssage","gethelplist","gethelpindex","gethelpdetial","noticetype","getnoticeList","getnoticedetial","folderList","fileList","downloadfile","responseType","getDownload","ComPagination","props","page","total","pageSize","limit","showSizeChanger","pageSizeOptions","current","showTitle","onChange","changePage","showTotal","range","Option","Table","Select","TextArea","Input","AddWork","t","useTranslation","navigate","useNavigate","useState","orderTypeList","setorderTypeList","title","content","addOrderParams","files","setFiles","accept","action","baseUrl","name","headers","showUploadList","multiple","onRemove","file","beforeUpload","isLt10M","size","length","message","clearHtml","flag","forEach","res","fullName","split","onfinish","console","log","judge","i","percent","event","setTimeout","status","response","msg","fileSign","fileName","save_name","image_base64","fileType","filenames","flg","item","newData","url","fileSignName","productList","setproductList","productIds","setproductIds","typeSelect","setTypeSelect","doms","document","getElementsByClassName","innerHTML","useEffect","onGetTickType","onGetHostList","then","list","removeFile","prev","filter","el","className","gutter","lg","md","map","index","join","onClick","src","require","maxLength","defaultValue","e","target","value","mode","showArrow","filterOption","input","option","children","toLowerCase","includes","getPopupContainer","triggerNode","parentElement","product_name","style","width","resize","height","rows","showPreviewIcon","push","ticket_type_id","host_ids","attachment","onCreate","description","cached","getScrollBarSize","fresh","undefined","inner","createElement","outer","outerStyle","position","top","left","pointerEvents","visibility","overflow","appendChild","body","widthContained","offsetWidth","widthScroll","clientWidth","removeChild","ensureSize","str","match","Number","isNaN","getTargetScrollBarSize","Element","_getComputedStyle","getComputedStyle"],"sourceRoot":""}