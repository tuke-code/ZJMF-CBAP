{"version":3,"file":"static/js/601.11afeacb.chunk.js","mappings":"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","sources":["views/product/storage/CreateStorage.jsx"],"sourcesContent":["import React, { useState, useEffect, useReducer, useRef, useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { showDialog } from '@/utils/util'\r\nimport {\r\n    Col, Row, message, Input, Form, Select, Popover, Checkbox\r\n} from \"antd\";\r\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\r\nimport './CreateStorage.less'\r\nimport * as cloud from \"@/api/cloud\";\r\nimport { getCloudListAll, getCloudById, settle, getDurationPrice, configPackage } from '@/api/storage'\r\nimport PayModal from \"@/components/payModal/PayModal\";\r\nconst { Option } = Select;\r\n\r\nvar inputTimer = null\r\nexport default function CreateStorage() {\r\n\r\n    // 定时器\r\n    const [timer, setTimer] = useState(null);\r\n    // 轮询剩余时间\r\n    const [time, setTime] = useState(300000); // 5分钟\r\n    const navigate = useNavigate()\r\n    const { t } = useTranslation()\r\n    // 订购页实例配置数据\r\n    const [configData, setConfigData] = useState([])\r\n    // 实例\r\n    const [cloudList, setCloudList] = useState([])\r\n\r\n    // 周期列表\r\n    const [cycleList, setCycleList] = useState([])\r\n\r\n    // 文件系统\r\n    const [system, setSystem] = useState([\r\n        {\r\n            id: 1,\r\n            label: 'xfs',\r\n            value: 'xfs'\r\n        },\r\n        {\r\n            id: 2,\r\n            label: 'ext4',\r\n            value: 'ext4'\r\n        },\r\n        {\r\n            id: 3,\r\n            label: 'ext3',\r\n            value: 'ext3'\r\n        },\r\n    ])\r\n\r\n    // 当前周期数组选中的index\r\n    const [sizeIndex, setSizeIndex] = useState(0)\r\n    // 20G\r\n    const [size20, setSize20] = useState([])\r\n    // 50G\r\n    const [size50, setSize50] = useState([])\r\n    // 100G\r\n    const [size100, setSize100] = useState([])\r\n    // 200G\r\n    const [size200, setSize200] = useState([])\r\n    // 500G\r\n    const [size500, setSize500] = useState([])\r\n\r\n    // 表单数据\r\n    const [form] = Form.useForm()\r\n\r\n    const [formData, setFormData] = useState({\r\n        type_id: 1,\r\n        isChecked: false,\r\n        qty: 1,\r\n        duration_price_id: 1\r\n    })\r\n    // 支付相关\r\n    const [isShowPay, setIsShowPay] = useState(false)\r\n    const [orderId, setOrderId] = useState('')\r\n\r\n\r\n    // 底部 相关\r\n\r\n    // 优惠码弹窗\r\n    const [disVisible, setDisVisible] = useState(false);\r\n    const disRef = useRef();\r\n    const [disInput, setDisinput] = useState(\"\");\r\n    // 公共配置\r\n    const [common] = useState(JSON.parse(localStorage.getItem('font_config')))\r\n    // 实例详情\r\n    const [center, setCenter] = useState()\r\n    // 价格展示\r\n    const [price, setPrice] = useState({});\r\n    // 优惠码列表\r\n    const [discountList, setDiscountList] = useState([]);\r\n\r\n    // 容量允许范围\r\n    const [sizeRange, setSizeRange] = useState()\r\n\r\n    /* 实例 */\r\n    // 实例列表\r\n    const getCloud = async () => {\r\n        try {\r\n            const res = await getCloudListAll()\r\n            setCloudList(res.data.data.list)\r\n            form.setFieldsValue({\r\n                host_id: res.data.data.list[0].id\r\n            })\r\n            // 获取实例详情\r\n            getCloudDetail(res.data.data.list[0].id)\r\n            // 获取套餐\r\n            getConfigPackage(res.data.data.list[0].id)\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    // 获取实例详情\r\n    const getCloudDetail = (id) => {\r\n        const params = {\r\n            id\r\n        }\r\n        getCloudById(params).then(res => {\r\n            if (res.data.status === 200) {\r\n                setCenter(res.data.data.data_center)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // 周期select的值\r\n    const [cycleSelectValue, setCycleSelectValue] = useState(1)\r\n\r\n    // 切换周期\r\n    const changeCycle = (e) => {\r\n        setFormData({ ...formData, duration_price_id: e })\r\n        setCycleSelectValue(e)\r\n        // 获取周期的index\r\n        const index = cycleList.findIndex(item => {\r\n            return item.id == e\r\n        })\r\n        setSizeIndex(index)\r\n\r\n        // 获取价格 和价格周期\r\n        const cycle = cycleList.filter(item => item.id == e)\r\n        setPrice({\r\n            price: cycle[0].price,\r\n            billing_cycle: cycle[0].display_name\r\n        })\r\n    }\r\n\r\n    // 切换实例\r\n    const changeCloud = async (e) => {\r\n        form.setFieldsValue({\r\n            host_id: e\r\n        })\r\n        // 获取实例详情\r\n        getCloudDetail(e)\r\n        // 获取商品配置页面 详情\r\n        getConfigPackage(e)\r\n        // 重置优惠码\r\n        setDiscountList([])\r\n    }\r\n\r\n    // 获取订购页实例配置信息\r\n    const getConfigPackage = (host_id) => {\r\n        const params = {\r\n            id: 34,\r\n            host_id\r\n        }\r\n\r\n        configPackage(params).then(res => {\r\n            if (res.data.status === 200) {\r\n                setConfigData(res.data.data.package)\r\n                if (res.data.data.package.length > 0) {\r\n                    setFormData({ ...formData, type_id: res.data.data.package[0].id })\r\n                    setSizeRange({\r\n                        size_min: res.data.data.package[0].size_min,\r\n                        size_max: res.data.data.package[0].size_max\r\n                    })\r\n                    form.setFieldsValue({\r\n                        type_id: res.data.data.package[0].id\r\n                    })\r\n                    doGetFiveDurationPrice(res.data.data.package[0].id)\r\n                }\r\n            }\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n\r\n    /* 磁盘类型切换 */\r\n    const changeType = (e) => {\r\n        const id = e.target.getAttribute(\"data-id\");\r\n        setFormData({ ...formData, type_id: id })\r\n        form.setFieldsValue({\r\n            type_id: id\r\n        })\r\n        doGetFiveDurationPrice(id)\r\n        // 获取该磁盘的 最小容量和最大容量\r\n        configData.map(item => {\r\n            if (item.id == id) {\r\n                setSizeRange({\r\n                    size_min: item.size_min,\r\n                    size_max: item.size_max\r\n                })\r\n            }\r\n        })\r\n\r\n        // 获取周期信息\r\n        doGetDurationPrice()\r\n        // 初始化优惠码\r\n        setDiscountList([])\r\n    }\r\n\r\n    // 磁盘容量变化\r\n    const sizeChange = (e) => {\r\n        if (inputTimer) {\r\n            clearTimeout(inputTimer)\r\n        }\r\n\r\n        inputTimer = setTimeout(() => {\r\n            const value = e.target.value\r\n            // 判断容量是否合规\r\n            if (value < sizeRange.size_min || value > sizeRange.size_max) {\r\n                return false\r\n            } else {\r\n                // 获取当前周期的总价\r\n                // 获取价格 和价格周期\r\n                setFormData({ ...formData, size: value })\r\n                // 获取周期信息\r\n                doGetDurationPrice()\r\n                // 初始化优惠码\r\n                setDiscountList([])\r\n            }\r\n        }, 500)\r\n    }\r\n\r\n    // 容量周期item点击事件\r\n    const itemClick = (size) => {\r\n        form.setFieldsValue({\r\n            size\r\n        })\r\n        setFormData({\r\n            ...formData,\r\n            size\r\n        })\r\n        doGetDurationPrice()\r\n    }\r\n\r\n    // 底部方法\r\n    // 优惠码 确定按钮\r\n    const closeDiscount = async () => {\r\n        form.validateFields().then(async resData => {\r\n            try {\r\n                const value = disRef.current.input.value;\r\n                if (!value) {\r\n                    return false;\r\n                }\r\n                // 不能相同优惠码\r\n                if (discountList.find(item => item.name === value)) {\r\n                    return showDialog(t(\"cloud.tip31\"), 'error')\r\n                }\r\n                // 使用过的优惠码包含不可叠加的\r\n                if (discountList.find(item => !item.overlay)) {\r\n                    return showDialog(t(\"cloud.tip32\"), 'error')\r\n                }\r\n                const res = await cloud.usePromoCode({\r\n                    promo_code: value,\r\n                    scene: \"New\",\r\n                    total: Number(price.price),\r\n                    cycles: [\r\n                        {\r\n                            product_id: formData.product_id,\r\n                            amount: price.price,\r\n                            billing_cycle_time: price.duration,\r\n                            config_options: {\r\n                                package_id: resData.type_id,\r\n                                host_id: resData.host_id,\r\n                                size: Number(resData.size),\r\n                                mount_enable: resData.isChecked ? 1 : 0,\r\n                                file_system: resData.system ? resData.system : '',\r\n                                mount_path: resData.way ? resData.way : '',\r\n                                duration_price_id: formData.duration_price_id\r\n                            },\r\n                        },\r\n                    ],\r\n                });\r\n                if (res.data.status === 200) {\r\n                    const { overlay, discount } = res.data.data\r\n                    // 如果之前有使用过优惠码，当前优惠码不可叠加的时候不能使用\r\n                    if (discountList.length > 0 && !overlay) {\r\n                        return showDialog(t(\"cloud.tip32\"), 'error')\r\n                    }\r\n                    setDiscountList((discountList) => {\r\n                        const temp = discountList;\r\n                        discountList.push({ name: value, num: discount, overlay });\r\n                        return temp;\r\n                    });\r\n                    setDisVisible(false);\r\n                }\r\n            } catch (error) {\r\n                message.error(error);\r\n            }\r\n        }).catch(error => {\r\n\r\n        })\r\n\r\n    };\r\n    // 取消优惠码\r\n    const cancelDiscount = (index) => {\r\n        setDiscountList((discountList) => {\r\n            const temp = JSON.parse(JSON.stringify(discountList));\r\n            temp.splice(index, 1);\r\n            return temp;\r\n        });\r\n    };\r\n\r\n    // 获取 20G、50G、100G、200G、500G的周期价格\r\n    const doGetFiveDurationPrice = (package_id) => {\r\n        const ex = [20, 50, 100, 200, 500]\r\n        ex.forEach(size => {\r\n            const params = {\r\n                package_id,\r\n                size\r\n            }\r\n            getDurationPrice(params).then(res => {\r\n                if (res.data.status == 200) {\r\n                    const list = res.data.data.list\r\n                    if (size == 20) {\r\n                        setSize20(list)\r\n                    }\r\n                    if (size == 50) {\r\n                        setSize50(list)\r\n                    }\r\n                    if (size == 100) {\r\n                        setSize100(list)\r\n                    }\r\n                    if (size == 200) {\r\n                        setSize200(list)\r\n                    }\r\n                    if (size == 500) {\r\n                        setSize500(list)\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    // 获取周期价格\r\n    const doGetDurationPrice = () => {\r\n        // 容量和 磁盘类型改变时获取周期价格\r\n        const data = form.getFieldValue()\r\n        let isPass = true\r\n        if (!data.size || !data.type_id) {\r\n            isPass = false\r\n        }\r\n        if (isPass) {\r\n            const params = {\r\n                package_id: data.type_id,\r\n                size: data.size,\r\n            }\r\n            getDurationPrice(params).then(res => {\r\n                // console.log(res);\r\n                if (res.data.status === 200 && res.data.data.list) {\r\n                    const list = res.data.data.list\r\n                    setCycleList(list)\r\n                    setPrice({\r\n                        price: list[sizeIndex].price,\r\n                        billing_cycle: list[sizeIndex].display_name\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // 提交创建磁盘\r\n    const create = () => {\r\n        form.validateFields().then(async res => {\r\n            let promo_code = []\r\n            if (discountList.length > 0) {\r\n                discountList.map(item => {\r\n                    promo_code.push(item.name)\r\n                })\r\n            }\r\n\r\n            const params = {\r\n                product_id: 34,\r\n                config_options: {\r\n                    package_id: res.type_id,\r\n                    host_id: res.host_id,\r\n                    size: Number(res.size),\r\n                    mount_enable: res.isChecked ? 1 : 0,\r\n                    file_system: res.system ? res.system : '',\r\n                    mount_path: res.way ? res.way : '',\r\n                    duration_price_id: formData.duration_price_id\r\n                },\r\n                customfield: {\r\n                    promo_code\r\n                },\r\n                qty: 1\r\n            }\r\n            // console.log(params);\r\n            try {\r\n                // 生成订单号\r\n                const res = await settle(params)\r\n                if (res.data.status === 200) {\r\n                    const id = res.data.data.order_id\r\n                    setIsShowPay(true)\r\n                    setOrderId(id)\r\n                    // 轮询支付状态\r\n                    pollingStatus(id);\r\n                }\r\n            } catch (error) {\r\n                message.error(error.data.msg)\r\n            }\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    const handleVisibleChange = (newVisible) => {\r\n        setDisVisible(newVisible);\r\n        setDisinput(\"\");\r\n    };\r\n\r\n    const changeInput = (e) => {\r\n        setDisinput(e.target.value);\r\n    };\r\n\r\n    // 轮询支付状态\r\n    const pollingStatus = (id) => {\r\n        if (!timer) {\r\n            setTimer(\r\n                (timer) =>\r\n                (timer = setInterval(async () => {\r\n                    const res = await cloud.getPayStatus(id ? id : orderId);\r\n                    setTime((time) => {\r\n                        return (time -= 2000);\r\n                    });\r\n                    if (res.data.code === \"Paid\") {\r\n                        showDialog(res.data.msg, 'success', () => {\r\n                            navigate(\"/storage\", { replace: true });\r\n\r\n                        })\r\n                        clearInterval(timer);\r\n                        setIsShowPay(false);\r\n                        return false;\r\n                    }\r\n                    // 支付成功或者5分钟到点清除定时器\r\n                    if (res.code === \"Paid\" || time === 0) {\r\n                        clearInterval(timer);\r\n                        setIsShowPay(false);\r\n                        return false;\r\n                    }\r\n                }, 2000))\r\n            );\r\n        }\r\n    };\r\n    useEffect(async () => {\r\n        await getCloud()\r\n        return () => {\r\n            clearInterval(timer);\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className='create-ip com-content'>\r\n            <div className='com-card'>\r\n                <div className=\"box data-center\">\r\n                    <div className=\"com-tit\">\r\n                        <h1 className=\"tit\">创建磁盘</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"box vpc\">\r\n                    <Form\r\n                        name=\"vpc\"\r\n                        layout=\"vertical\"\r\n                        form={form}\r\n                        initialValues={{\r\n                            type_id: 1,\r\n                            // system: system[0] ? system[0].value : null,\r\n                            isChecked: false\r\n                        }}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"选择实例\"\r\n                            name='host_id'\r\n                            rules={[{\r\n                                required: true,\r\n                                message: t('select') + t('menu.cloud')\r\n                            }]}\r\n                        >\r\n                            <Select onChange={changeCloud} getPopupContainer={triggerNode => triggerNode.parentElement}>\r\n                                {\r\n                                    cloudList.map(item => {\r\n                                        return (\r\n                                            <Option value={item.id} key={item.id}>{item.name}</Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"磁盘类型\"\r\n                            name=\"type_id\"\r\n                            rules={[{\r\n                                required: true,\r\n                                message: \"请选择磁盘类型\"\r\n                            }]}\r\n                            style={{\r\n                                marginBottom: 0,\r\n                            }}\r\n                        >\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 30 }}>\r\n                                {\r\n                                    configData.length > 0 ?\r\n                                        configData.map(item => {\r\n                                            return (\r\n                                                <Col\r\n                                                    xs={{ span: 24 }}\r\n                                                    md={{ span: 12 }}\r\n                                                    lg={{ span: 8 }}\r\n                                                    key={item.id}\r\n                                                >\r\n                                                    <div\r\n                                                        className={`item c-hover ${item.id == formData.type_id * 1 ? \"c-active\" : \"\"}`}\r\n                                                        onClick={changeType}\r\n                                                        data-id={item.id}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </div>\r\n                                                </Col>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </Row>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"容量\"\r\n                        >\r\n                            <div className=\"size-main\">\r\n                                <Form.Item name=\"size\" style={{\r\n                                    display: 'inline-block', width: '1.67rem', marginBottom: 0\r\n                                }}\r\n                                    rules={[\r\n                                        { required: true, message: \"请填写容量\" },\r\n                                        // 检查容量是否合规\r\n                                        {\r\n                                            validator: (rule, value, callback) => {\r\n                                                if ((value < sizeRange.size_min) || value > sizeRange.size_max) {\r\n                                                    // callback(`磁盘容量应该在${sizeRange.size_min}-${sizeRange.size_max}`)\r\n                                                    return Promise.reject(`磁盘容量应该在${sizeRange.size_min}-${sizeRange.size_max}`);\r\n                                                } else {\r\n                                                    return Promise.resolve();\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input onChange={sizeChange} style={{ width: '1.57rem', height: '.44rem' }}></Input>\r\n                                </Form.Item>\r\n                                <span style={{\r\n                                    display: 'inline-block',\r\n                                    width: '24px',\r\n                                    lineHeight: '32px',\r\n                                    textAlign: 'center',\r\n                                }}>GB</span>\r\n                                <div className=\"size-content\">\r\n                                    {\r\n                                        size20.length > 0 ?\r\n                                            <div className={`size-item ${formData.size == 20 ? 'active' : ''}`} onClick={() => { itemClick(20) }}>\r\n                                                <div className=\"item-top\">{common.currency_prefix}{size20[sizeIndex].price}/{size20[sizeIndex].display_name}</div>\r\n                                                <div className=\"item-bottom\">20GB</div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n\r\n                                    {\r\n                                        size50.length > 0 ?\r\n                                            <div className={`size-item ${formData.size == 50 ? 'active' : ''}`} onClick={() => { itemClick(50) }}>\r\n                                                <div className=\"item-top\">{common.currency_prefix}{size50[sizeIndex].price}/{size50[sizeIndex].display_name}</div>\r\n                                                <div className=\"item-bottom\">50GB</div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        size100.length > 0 ?\r\n                                            <div className={`size-item ${formData.size == 100 ? 'active' : ''}`} onClick={() => { itemClick(100) }}>\r\n                                                <div className=\"item-top\">{common.currency_prefix}{size100[sizeIndex].price}/{size100[sizeIndex].display_name}</div>\r\n                                                <div className=\"item-bottom\">100GB</div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        size200.length > 0 ?\r\n                                            <div className={`size-item ${formData.size == 200 ? 'active' : ''}`} onClick={() => { itemClick(200) }}>\r\n                                                <div className=\"item-top\">{common.currency_prefix}{size200[sizeIndex].price}/{size200[sizeIndex].display_name}</div>\r\n                                                <div className=\"item-bottom\">200GB</div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        size500.length > 0 ?\r\n                                            <div className={`size-item ${formData.size == 500 ? 'active' : ''}`} onClick={() => { itemClick(500) }}>\r\n                                                <div className=\"item-top\">{common.currency_prefix}{size500[sizeIndex].price}/{size500[sizeIndex].display_name}</div>\r\n                                                <div className=\"item-bottom\">500GB</div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"自动挂载并格式化\" name=\"isChecked\" valuePropName=\"checked\">\r\n                            <Checkbox>是</Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"文件系统\"\r\n                            name=\"system\"\r\n                            style={{\r\n                                display: 'inline-block',\r\n                                width: '3.9rem',\r\n                                marginRight: '.3rem'\r\n                            }}>\r\n                            <Select getPopupContainer={triggerNode => triggerNode.parentElement} allowClear>\r\n                                {\r\n                                    system.map(item => {\r\n                                        return (\r\n                                            <Option value={item.value} key={item.id}>{item.name}</Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"搭载路径\"\r\n                            name=\"way\"\r\n                            style={{\r\n                                display: 'inline-block',\r\n                                width: '3.9rem',\r\n                            }}>\r\n                            <Input size=\"large\" style={{ height: '.44rem' }}></Input>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            {/* 底部 */}\r\n            <div className=\"total-box\" >\r\n                <div className=\"content\">\r\n                    <div className=\"item\">\r\n                        <div className=\"l-config\">\r\n                            <p className=\"tit\">{t(\"cloud.area\")}：</p>\r\n                            {center && (\r\n                                <p className=\"des\">\r\n                                    <img\r\n                                        src={require(`@/assets/images/cloud/${center.country_code}.png`)}\r\n                                        alt=\"\"\r\n                                        className=\"country\"\r\n                                    />\r\n                                    <span>\r\n                                        {center.country}/{center.city} &nbsp; {center.area}\r\n                                    </span>\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item\">\r\n                        <div className=\"l-config\">\r\n                            <p className=\"tit\">{t(\"common.cycle\")}：</p>\r\n\r\n                            {\r\n                                cycleList.length > 0 && <Select className='cycle' onChange={changeCycle} defaultValue={cycleList[0].id} value={cycleSelectValue}>\r\n                                    {\r\n                                        cycleList.map(item => {\r\n                                            return (\r\n                                                <Option value={item.id} key={item.price}>{common.currency_prefix}{item.price}/{item.display_name}</Option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item\">\r\n                        <div className=\"l-config\">\r\n                            <div className=\"s-item\">\r\n                                <p className=\"tit\">{t(\"common.total_price\")}：</p>\r\n                                {price && (\r\n                                    <>\r\n                                        <p className=\"price\">\r\n                                            {common.currency_prefix}\r\n                                            <span className=\"num\">\r\n                                                {String(\r\n                                                    (\r\n                                                        (price.price * formData.qty - discountList.reduce((sum, i) => (sum += i.num * 1), 0)) >= 0 ?\r\n                                                            (price.price * formData.qty - discountList.reduce((sum, i) => (sum += i.num * 1), 0)) : 0\r\n                                                    ).toFixed(2)\r\n                                                )}\r\n                                            </span>\r\n                                            /{price.billing_cycle}\r\n                                        </p>\r\n                                        {/* 优惠码列表 */}\r\n                                        <div className=\"discount-list\">\r\n                                            {discountList.length > 0 &&\r\n                                                discountList.map((item, index) => {\r\n                                                    return (\r\n                                                        <p className=\"item\" key={item.name}>\r\n                                                            <span className=\"num\">-¥{item.num}</span>\r\n                                                            <span>\r\n                                                                ({t(\"common.discount_code\") + item.name})\r\n                                                                <MinusCircleOutlined\r\n                                                                    onClick={() => cancelDiscount(index)}\r\n                                                                />\r\n                                                            </span>\r\n                                                        </p>\r\n                                                    );\r\n                                                })}\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"config\">\r\n                            <p className=\"tit\"></p>\r\n                            <div className=\"bot\" id=\"bot\">\r\n                                <Popover\r\n                                    placement=\"bottomRight\"\r\n                                    getPopupContainer={() => document.getElementById(\"bot\")}\r\n                                    content={\r\n                                        <div className=\"discount\">\r\n                                            <Input\r\n                                                placeholder={t(\"cloud.input_discount_code\")}\r\n                                                value={disInput}\r\n                                                ref={disRef}\r\n                                                onChange={changeInput}\r\n                                            ></Input>\r\n                                            <span className=\"close\" onClick={closeDiscount}>\r\n                                                {t(\"common.sure\")}\r\n                                            </span>\r\n                                        </div>\r\n                                    }\r\n                                    trigger=\"click\"\r\n                                    visible={disVisible}\r\n                                    onVisibleChange={handleVisibleChange}\r\n                                >\r\n                                    <span className=\"discount_code\">\r\n                                        {t(\"common.discount_code\")}\r\n                                    </span>\r\n                                </Popover>\r\n                                <div className=\"r-btn\">\r\n                                    <p className=\"checkout\" onClick={create}>\r\n                                        创建并购买\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 支付modal */}\r\n            {\r\n                isShowPay && orderId &&\r\n                (\r\n                    <PayModal orderId={orderId} timer={timer}></PayModal>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"],"names":["Option","Select","inputTimer","CreateStorage","useState","timer","setTimer","time","setTime","navigate","useNavigate","t","useTranslation","configData","setConfigData","cloudList","setCloudList","cycleList","setCycleList","id","label","value","system","sizeIndex","setSizeIndex","size20","setSize20","size50","setSize50","size100","setSize100","size200","setSize200","size500","setSize500","Form","form","type_id","isChecked","qty","duration_price_id","formData","setFormData","isShowPay","setIsShowPay","orderId","setOrderId","disVisible","setDisVisible","disRef","useRef","disInput","setDisinput","JSON","parse","localStorage","getItem","common","center","setCenter","price","setPrice","discountList","setDiscountList","sizeRange","setSizeRange","getCloud","getCloudListAll","res","data","list","setFieldsValue","host_id","getCloudDetail","getConfigPackage","params","getCloudById","then","status","data_center","cycleSelectValue","setCycleSelectValue","changeCloud","e","configPackage","package","length","size_min","size_max","doGetFiveDurationPrice","catch","error","changeType","target","getAttribute","map","item","doGetDurationPrice","itemClick","size","closeDiscount","validateFields","resData","current","input","find","name","showDialog","overlay","cloud","promo_code","scene","total","Number","cycles","product_id","amount","billing_cycle_time","duration","config_options","package_id","mount_enable","file_system","mount_path","way","discount","temp","push","num","message","forEach","getDurationPrice","getFieldValue","isPass","billing_cycle","display_name","pollingStatus","setInterval","code","msg","replace","clearInterval","useEffect","className","layout","initialValues","rules","required","onChange","getPopupContainer","triggerNode","parentElement","style","marginBottom","gutter","xs","sm","md","lg","span","onClick","display","width","validator","rule","callback","Promise","reject","resolve","clearTimeout","setTimeout","height","lineHeight","textAlign","currency_prefix","valuePropName","marginRight","allowClear","src","require","country_code","alt","country","city","area","index","findIndex","cycle","filter","defaultValue","String","reduce","sum","i","toFixed","stringify","splice","cancelDiscount","placement","document","getElementById","content","placeholder","ref","trigger","visible","onVisibleChange","newVisible","customfield","settle","order_id"],"sourceRoot":""}